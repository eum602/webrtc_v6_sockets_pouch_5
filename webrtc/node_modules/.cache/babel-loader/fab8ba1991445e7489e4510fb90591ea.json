{"ast":null,"code":"import _classCallCheck from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_4/webrtc/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_4/webrtc/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_4/webrtc/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_4/webrtc/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_4/webrtc/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_4/webrtc/src/Blockchain/PendingTransactions.js\";\nimport React, { Component } from 'react';\nimport { List, Card } from \"semantic-ui-react\";\n\nvar PendingTransactions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PendingTransactions, _Component);\n\n  function PendingTransactions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PendingTransactions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PendingTransactions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(PendingTransactions, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.props.pending_transactions;\n\n      var render_transactions = function render_transactions() {\n        if (data) {\n          var i = 0;\n          console.log('data en render transactions', data);\n          var txs = data.foreach(function (transaction) {\n            i++;\n            return {\n              //la llave debe estar en la misma linea en donde esta el map!!\n              header: 'Transaction ' + i,\n              description: React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 17\n                },\n                __self: this\n              }, React.createElement(List, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 17\n                },\n                __self: this\n              }, React.createElement(List.Item, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 18\n                },\n                __self: this\n              }, React.createElement(List.Header, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 18\n                },\n                __self: this\n              }, \"amount\"), transaction['amount'])), React.createElement(List, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 20\n                },\n                __self: this\n              }, React.createElement(List.Item, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 21\n                },\n                __self: this\n              }, React.createElement(List.Header, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 21\n                },\n                __self: this\n              }, \"sender\"), transaction['sender'])), React.createElement(List, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 23\n                },\n                __self: this\n              }, React.createElement(List.Item, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 24\n                },\n                __self: this\n              }, React.createElement(List.Header, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 24\n                },\n                __self: this\n              }, \"recipient\"), transaction['recipient'])), React.createElement(List, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 26\n                },\n                __self: this\n              }, React.createElement(List.Item, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 27\n                },\n                __self: this\n              }, React.createElement(List.Header, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 27\n                },\n                __self: this\n              }, \"value4\"), transaction['value4'])), React.createElement(List, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 29\n                },\n                __self: this\n              }, React.createElement(List.Item, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 30\n                },\n                __self: this\n              }, React.createElement(List.Header, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 30\n                },\n                __self: this\n              }, \"value 5\"), transaction['value5']))) //console.log(i,transaction);\n\n            };\n          }); //console.log('txs',txs);\n\n          return React.createElement(Card.Group, {\n            items: txs,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          });\n        }\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, render_transactions());\n    }\n  }]);\n\n  return PendingTransactions;\n}(Component);\n\nexport default PendingTransactions;","map":{"version":3,"sources":["/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_4/webrtc/src/Blockchain/PendingTransactions.js"],"names":["React","Component","List","Card","PendingTransactions","state","data","props","pending_transactions","render_transactions","i","console","log","txs","foreach","transaction","header","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAaC,IAAb,QAAwB,mBAAxB;;IACMC,mB;;;;;;;;;;;;;;;;;UACFC,K,GAAQ,E;;;;;;6BAGA;AACJ,UAAIC,IAAI,GAAI,KAAKC,KAAL,CAAWC,oBAAvB;;AACA,UAAIC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC5B,YAAGH,IAAH,EAAQ;AACJ,cAAII,CAAC,GAAC,CAAN;AACJC,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CN,IAA3C;AACA,cAAMO,GAAG,GAAEP,IAAI,CAACQ,OAAL,CAAa,UAAAC,WAAW,EAAE;AACnCL,YAAAA,CAAC;AACD,mBAAO;AAAE;AACPM,cAAAA,MAAM,EAAC,iBAAiBN,CADnB;AAELO,cAAAA,WAAW,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAK,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAClB,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAX,EAA6CF,WAAW,CAAC,QAAD,CAAxD,CADkB,CAAL,EAGf,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAX,EAA6CA,WAAW,CAAC,QAAD,CAAxD,CADF,CAHe,EAMf,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAX,EAAgDA,WAAW,CAAC,WAAD,CAA3D,CADF,CANe,EASf,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAX,EAA6CA,WAAW,CAAC,QAAD,CAAxD,CADF,CATe,EAYf,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAX,EAA8CA,WAAW,CAAC,QAAD,CAAzD,CADF,CAZe,CAFR,CAmBP;;AAnBO,aAAP;AAqBD,WAvBU,CAAX,CAHQ,CA2BR;;AACA,iBAAQ,oBAAC,IAAD,CAAM,KAAN;AAAY,YAAA,KAAK,EAAEF,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAEC;AAEF,OAjCH;;AAqCA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMJ,mBAAmB,EAAzB,CAAP;AACH;;;;EA5C6BR,S;;AAgDlC,eAAeG,mBAAf","sourcesContent":["import React, {Component} from 'react';\nimport {List,Card} from \"semantic-ui-react\";\nclass PendingTransactions extends Component {\n    state = {\n\n    }\n    render(){\n        let data =  this.props.pending_transactions;\n        let render_transactions = () => {\n            if(data){\n                let i=0;\n            console.log('data en render transactions', data);\n            const txs =data.foreach(transaction=>{\n              i++;\n              return { //la llave debe estar en la misma linea en donde esta el map!!\n                header:'Transaction ' + i,\n                description: <div><List>\n                <List.Item><List.Header>amount</List.Header>{transaction['amount']}</List.Item>\n              </List>\n              <List>\n                <List.Item><List.Header>sender</List.Header>{transaction['sender']}</List.Item>\n              </List>\n              <List>\n                <List.Item><List.Header>recipient</List.Header>{transaction['recipient']}</List.Item>\n              </List>\n              <List>\n                <List.Item><List.Header>value4</List.Header>{transaction['value4']}</List.Item>\n              </List>\n              <List>\n                <List.Item><List.Header>value 5</List.Header>{transaction['value5']}</List.Item>\n              </List></div>\n              }\n        \n              //console.log(i,transaction);\n              \n            })\n            //console.log('txs',txs);\n            return (<Card.Group items={txs}/>)\n\n            }\n            \n          }\n\n\n\n        return(<div>{render_transactions()}</div>)\n    }\n\n}\n\nexport default PendingTransactions;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_5/webrtc/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_5/webrtc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_5/webrtc/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_5/webrtc/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_5/webrtc/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_5/webrtc/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_5/webrtc/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_5/webrtc/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_5/webrtc/src/pages/index.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport DB from '../DB';\nimport CreateBlockchain from '../Blockchain/CreateBlockchain';\nimport Layout from '../Style/Layout';\nimport NewPeer from '../wrtconf/NewPeer';\nvar endpoint = \"http://localhost:4001\"; // this is where we are connecting to with sockets\n\nvar Mean =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Mean, _Component);\n\n  function Mean() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Mean);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Mean)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      db: new DB('blockchain'),\n      otherNodes_id: [],\n      flag: true,\n      cPc: []\n    };\n\n    _this.receiveCandidateHandler = function (data) {\n      new Promise(function (resolve, reject) {\n        resolve(_this.signalingMessageHandler(data));\n        reject(\"Error in receiveCandidateHandler\");\n      }).then(function (i) {\n        return _this.state.cPc[i].callAction();\n      }).catch(function (e) {\n        return console.log(\"Error in receive signalingMessageHandler: \".concat(e));\n      });\n    };\n\n    _this.becomeCallee = function (data) {\n      new Promise(function (resolve, reject) {\n        resolve(_this.signalingMessageHandler(data));\n        reject(\"Error in becomeCallee\");\n      }).then(function (i) {\n        return _this.state.cPc[i].callee();\n      }).catch(function (e) {\n        return console.log(\"Error in receive signalingMessageHandler: \".concat(e));\n      });\n    };\n\n    _this.signalingMessageHandler = function (data) {\n      console.log(\"candidate received\", data);\n      console.log(\"signalingMessageHandler en App.js\");\n      var candidate_socket_id = data.candidate_socket_id,\n          socket = data.socket;\n\n      if (candidate_socket_id && socket) {\n        var otherNodes_id = _toConsumableArray(_this.state.otherNodes_id);\n\n        otherNodes_id.push(candidate_socket_id);\n        var i = otherNodes_id.length - 1;\n        var pc = new NewPeer(socket, candidate_socket_id);\n\n        var cPc = _toConsumableArray(_this.state.cPc);\n\n        cPc.push(pc);\n\n        _this.setState({\n          otherNodes_id: otherNodes_id,\n          cPc: cPc\n        });\n\n        console.log(\"indice i\", i);\n        return i;\n      }\n    };\n\n    _this.showUUID =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var node_uuid, msg;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              node_uuid = _this.state.db.createUUID();\n              msg = null;\n              _context2.next = 4;\n              return _this.state.db.getUUID().then(function (r) {\n                if (r === 'not_found') {\n                  console.log('creando uuid...');\n\n                  var fcn_uuid =\n                  /*#__PURE__*/\n                  function () {\n                    var _ref2 = _asyncToGenerator(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee() {\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.next = 2;\n                              return _this.state.db.saveUUID(node_uuid);\n\n                            case 2:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee, this);\n                    }));\n\n                    return function fcn_uuid() {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }();\n\n                  fcn_uuid(node_uuid);\n                  console.log('uuid', node_uuid);\n                  msg = 'uuid created!... : ';\n                } else {\n                  node_uuid = r;\n                  msg = 'uuid catched!... : ';\n                }\n\n                _this.setState({\n                  node_uuid: node_uuid\n                }, function () {\n                  return console.log(msg, node_uuid);\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    _this.connect_peer = function () {\n      if (_this.state.otherNodes_id.length > 0) {\n        //console.log(this.state.cPc[0].render())\n        var i = 0;\n        console.log(\"Peers created are \".concat(_this.state.cPc.length));\n\n        _this.state.cPc.forEach(function (pc) {\n          i++;\n          console.log(\"\".concat(i, \". State of peer:\"), pc); //return this.state.cPc[i].render()\n        });\n      }\n    };\n\n    _this.createSocket = function () {\n      var socket = io.connect(endpoint);\n      socket.on('connect', function () {\n        console.log(\"triggered socket.id: \", socket.id);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Mean, [{\n    key: \"createSocketHandler\",\n    value: function createSocketHandler() {\n      var _this2 = this;\n\n      var socket = io.connect(endpoint);\n      socket.on('connect', function () {\n        console.log(\"triggered socket.id: \", socket.id);\n      });\n      socket.on('newCandidate', function (candidatesSocket) {\n        return socket.emit('xyz', candidatesSocket, _this2.receiveCandidateHandler);\n      });\n      socket.on('startCallee', function (data) {\n        console.log(\"receiving call from peer: \", data.candidate_socket_id);\n        socket.emit('xyz', data, _this2.becomeCallee);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"blue\",\n        onClick: function onClick() {\n          return _this3.connect();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"connect\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.showUUID();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"showUUID\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.node_uuid), this.connect_peer(), React.createElement(\"button\", {\n        id: \"abc\",\n        onClick: function onClick() {\n          return _this3.createSocket();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"create Socket\"), React.createElement(CreateBlockchain, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Mean;\n}(Component);\n\nexport default Mean;","map":{"version":3,"sources":["/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_5/webrtc/src/pages/index.js"],"names":["React","Component","io","DB","CreateBlockchain","Layout","NewPeer","endpoint","Mean","state","db","otherNodes_id","flag","cPc","receiveCandidateHandler","data","Promise","resolve","reject","signalingMessageHandler","then","i","callAction","catch","e","console","log","becomeCallee","callee","candidate_socket_id","socket","push","length","pc","setState","showUUID","node_uuid","createUUID","msg","getUUID","r","fcn_uuid","saveUUID","connect_peer","forEach","createSocket","connect","on","id","candidatesSocket","emit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport io from 'socket.io-client'\nimport DB from '../DB'\nimport CreateBlockchain from '../Blockchain/CreateBlockchain'\nimport Layout from '../Style/Layout'\nimport NewPeer from '../wrtconf/NewPeer'\n\nconst endpoint = \"http://localhost:4001\" // this is where we are connecting to with sockets\nclass Mean extends Component {\n    state = {\n      db:new DB('blockchain'),          \n      otherNodes_id:[],\n      flag:true,\n      cPc:[]\n    } \n  \n\n  createSocketHandler() {\n    const socket =io.connect(endpoint)\n    socket.on('connect', ()=>{\n      console.log(\"triggered socket.id: \",socket.id)\n    })\n\n    socket.on('newCandidate', candidatesSocket => socket.emit('xyz',\n    candidatesSocket,this.receiveCandidateHandler))\n\n    socket.on('startCallee', data => {\n    console.log(\"receiving call from peer: \", data.candidate_socket_id)\n    socket.emit('xyz',\n    data,this.becomeCallee)})    \n  }\n\n  \n  receiveCandidateHandler = data => {\n    new Promise((resolve,reject)=>{\n      resolve(this.signalingMessageHandler(data))\n      reject(\"Error in receiveCandidateHandler\")\n    }).then(i=>this.state.cPc[i].callAction()).catch(e=>console.log(`Error in receive signalingMessageHandler: ${e}`))\n  }\n\n  becomeCallee = (data) => {\n    new Promise((resolve,reject)=>{\n      resolve(this.signalingMessageHandler(data))\n      reject(\"Error in becomeCallee\")\n    }).then(i=>this.state.cPc[i].callee())\n    .catch(e=>console.log(`Error in receive signalingMessageHandler: ${e}`))\n  }\n\n  signalingMessageHandler = data => {\n    console.log(\"candidate received\",data)\n    console.log(\"signalingMessageHandler en App.js\")\n    const {candidate_socket_id,socket} = data\n    if(candidate_socket_id && socket){\n      let otherNodes_id = [...this.state.otherNodes_id]\n      otherNodes_id.push(candidate_socket_id)\n      const i = otherNodes_id.length - 1      \n      let pc = new NewPeer(socket , candidate_socket_id)\n      let cPc = [...this.state.cPc]\n      cPc.push(pc)\n      this.setState({otherNodes_id,cPc})\n      console.log(\"indice i\", i)\n      return i\n    }\n  }\n\n  showUUID = async () => {\n    let node_uuid = this.state.db.createUUID()\n    let msg = null\n    await this.state.db.getUUID().then(r=>{\n      if(r==='not_found'){\n        console.log('creando uuid...')\n        const fcn_uuid = async()=>{await this.state.db.saveUUID(node_uuid)}\n        fcn_uuid(node_uuid)\n        console.log('uuid',node_uuid)\n        msg='uuid created!... : '\n      }else{\n        node_uuid = r\n        msg='uuid catched!... : '\n      }\n      this.setState({node_uuid},()=>console.log(msg , node_uuid))\n    })\n  }\n  \n  connect_peer = () =>{\n    if(this.state.otherNodes_id.length>0){\n      //console.log(this.state.cPc[0].render())\n      let i = 0\n      console.log(`Peers created are ${this.state.cPc.length}` )\n      this.state.cPc.forEach(pc =>{\n        i++\n        console.log(`${i}. State of peer:`,pc )\n        //return this.state.cPc[i].render()\n      })\n    }\n  }\n\n\n  createSocket = () =>{\n    const socket = io.connect(endpoint)\n    socket.on('connect', ()=>{\n     console.log(\"triggered socket.id: \",socket.id)\n    })\n  }\n\n\n  render() {\n    return (\n      <Layout>\n        <button id=\"blue\" onClick={() => this.connect()}>connect</button>\n        <button onClick={() => this.showUUID()}>showUUID</button>\n        <h2>{this.state.node_uuid}</h2>\n        {this.connect_peer()}\n        <button id=\"abc\" onClick={() => this.createSocket()}>create Socket</button>\n        \n        <CreateBlockchain />\n      </Layout>\n    )\n  }\n}\n\nexport default Mean"]},"metadata":{},"sourceType":"module"}
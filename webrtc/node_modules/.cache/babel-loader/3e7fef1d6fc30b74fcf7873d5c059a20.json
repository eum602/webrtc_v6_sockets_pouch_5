{"ast":null,"code":"import _regeneratorRuntime from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_2/webrtc/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_2/webrtc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_2/webrtc/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_2/webrtc/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_2/webrtc/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_2/webrtc/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_2/webrtc/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_2/webrtc/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_2/webrtc/src/App.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport DB from './DB';\nimport Wrtc from './wrtconf/Wrtc';\nimport Test from './wrtconf/Test';\nvar endpoint = \"http://localhost:4001\"; // this is where we are connecting to with sockets\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      db: new DB('blockchain1'),\n      //socket:io(endpoint),\n      socket: io.connect(endpoint),\n      otherNodes_id: [],\n      flag: true\n    };\n\n    _this.receiveCandidateHandler = function (data) {\n      console.log(\"candidate received\", data);\n      var candidate = data[0];\n\n      if (!_this.state.otherNodes_id.length > 0) {\n        var nodes_id = _toConsumableArray(_this.state.otherNodes_id);\n\n        nodes_id.push(candidate);\n\n        _this.setState({\n          otherNodes_id: _toConsumableArray(nodes_id)\n        }, console.log('updated other nodes: ', _this.state.otherNodes_id));\n      }\n    };\n\n    _this.connect = function () {\n      var socket = _this.state.socket;\n      socket.emit('searchingPeer', {\n        'id': socket.id,\n        'node_uuid': _this.state.node_uuid\n      });\n    };\n\n    _this.showUUID =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var node_uuid, msg;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              node_uuid = _this.state.db.createUUID();\n              msg = null;\n              _context2.next = 4;\n              return _this.state.db.getUUID().then(function (r) {\n                if (r === 'not_found') {\n                  console.log('creando uuid...');\n\n                  var fcn_uuid =\n                  /*#__PURE__*/\n                  function () {\n                    var _ref2 = _asyncToGenerator(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee() {\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.next = 2;\n                              return _this.state.db.saveUUID(node_uuid);\n\n                            case 2:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee, this);\n                    }));\n\n                    return function fcn_uuid() {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }();\n\n                  fcn_uuid(node_uuid);\n                  console.log('uuid', node_uuid);\n                  msg = 'uuid created!... : ';\n                } else {\n                  node_uuid = r;\n                  msg = 'uuid catched!... : ';\n                }\n\n                _this.setState({\n                  node_uuid: node_uuid\n                }, function () {\n                  return console.log(msg, node_uuid);\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    _this.connect_peer = function () {\n      console.log(\"other nodes to be sent: \", _this.state.otherNodes_id);\n\n      if (_this.state.otherNodes_id.length > 0) {\n        return React.createElement(Wrtc, {\n          socket: _this.state.socket,\n          peer_id: _this.state.otherNodes_id[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.signalingMessageHandler = function (data) {\n      var candidate_socket_id = data.candidate_socket_id;\n\n      if (candidate_socket_id) {\n        var otherNodes_id = _toConsumableArray(_this.state.otherNodes_id);\n\n        otherNodes_id.push(candidate_socket_id);\n\n        _this.setState({\n          flag: false,\n          otherNodes_id: otherNodes_id\n        });\n      }\n    };\n\n    _this.callee = function () {\n      if (!_this.state.flag) {\n        return React.createElement(Test, {\n          socket: _this.state.socket,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var socket = this.state.socket;\n      socket.on('connect', function () {\n        console.log(\"triggered socket.id: \", socket.id);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var socket = this.state.socket;\n\n      if (this.state.flag) {\n        socket.on('signaling_message', function (data) {\n          return socket.emit('xyz', data, _this2.signalingMessageHandler);\n        });\n      }\n\n      socket.on('newCandidate', function (candidates) {\n        return socket.emit('receiveCandidate', candidates, _this2.receiveCandidateHandler);\n      });\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"blue\",\n        onClick: function onClick() {\n          return _this2.connect();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"connect\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.showUUID();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"showUUID\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.node_uuid), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.connect_peer()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.callee()));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch_2/webrtc/src/App.js"],"names":["React","Component","io","DB","Wrtc","Test","endpoint","App","state","db","socket","connect","otherNodes_id","flag","receiveCandidateHandler","data","console","log","candidate","length","nodes_id","push","setState","emit","id","node_uuid","showUUID","createUUID","msg","getUUID","then","r","fcn_uuid","saveUUID","connect_peer","signalingMessageHandler","candidate_socket_id","callee","on","candidates","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport io from 'socket.io-client'\nimport DB from './DB'\nimport Wrtc from './wrtconf/Wrtc'\nimport Test from './wrtconf/Test'\nconst endpoint = \"http://localhost:4001\" // this is where we are connecting to with sockets\nclass App extends Component {\n    state = {\n      db:new DB('blockchain1'),      \n      //socket:io(endpoint),\n      socket:io.connect(endpoint),\n      otherNodes_id:[],\n      flag:true\n    }\n\n  componentWillMount() {\n    const {socket} =this.state\n    socket.on('connect', ()=>{\n      console.log(\"triggered socket.id: \",socket.id)\n    })\n  }\n\n  receiveCandidateHandler = (data) => {\n    console.log(\"candidate received\",data)\n    const candidate = data[0]\n    if(!this.state.otherNodes_id.length>0) {\n      const nodes_id = [...this.state.otherNodes_id]\n      nodes_id.push(candidate)      \n      this.setState({otherNodes_id:[...nodes_id]},\n        console.log('updated other nodes: ',this.state.otherNodes_id))\n    }\n  }\n  connect = () => {\n    const {socket} = this.state\n    socket.emit('searchingPeer',{'id':socket.id,'node_uuid':this.state.node_uuid})\n  }\n\n  showUUID = async () => {\n    let node_uuid = this.state.db.createUUID()\n    let msg = null\n    await this.state.db.getUUID().then(r=>{\n      if(r==='not_found'){\n        console.log('creando uuid...')      \n        const fcn_uuid = async()=>{await this.state.db.saveUUID(node_uuid)}\n        fcn_uuid(node_uuid)     \n        console.log('uuid',node_uuid)\n        msg='uuid created!... : '\n      }else{\n        node_uuid = r\n        msg='uuid catched!... : '\n      }\n      this.setState({node_uuid},()=>console.log(msg , node_uuid))\n    })\n  }\n\n  connect_peer = () =>{\n    console.log(\"other nodes to be sent: \" , this.state.otherNodes_id)\n    if(this.state.otherNodes_id.length>0){\n      return <Wrtc socket = {this.state.socket} peer_id = {this.state.otherNodes_id[0]} />\n    }\n  }\n\n\n  signalingMessageHandler = (data) => {\n      const {candidate_socket_id} = data\n      if(candidate_socket_id){\n        let otherNodes_id = [...this.state.otherNodes_id]\n        otherNodes_id.push(candidate_socket_id)\n        this.setState({flag:false , otherNodes_id })\n      }\n  }\n\n  callee = () => {\n    if(!this.state.flag){\n      return <Test socket = {this.state.socket}/>\n    }\n  }\n\n  render() {\n    const {socket} = this.state\n    if(this.state.flag){\n      socket.on('signaling_message',(data) => socket.emit('xyz',\n      data,this.signalingMessageHandler))\n    }\n\n    socket.on('newCandidate',(candidates) => socket.emit('receiveCandidate',\n    candidates,this.receiveCandidateHandler))\n\n    return (\n\n      <div style={{ textAlign: \"center\" }}>\n        <button id=\"blue\" onClick={() => this.connect()}>connect</button>\n        <button onClick={() => this.showUUID()}>showUUID</button>\n        <h2>{this.state.node_uuid}</h2>\n        <div>{this.connect_peer()}</div>\n        <div>{this.callee()}</div>\n      </div>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}
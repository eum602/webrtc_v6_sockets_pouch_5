{"ast":null,"code":"import _regeneratorRuntime from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/src/App.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport DB from './DB';\nvar endpoint = \"http://localhost:4001\"; // this is where we are connecting to with sockets\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      db: new DB('blockchain1'),\n      sent: false,\n      socket: io(endpoint),\n      otherNodes_id: {}\n    };\n\n    _this.receiveCandidateHandler = function (data) {\n      console.log(\"candidate received\", data);\n      var candidate = data;\n\n      if (!_this.state.otherNodes_id.candidate) {\n        var nodes_id = _objectSpread({}, _this.state.otherNodes_id);\n\n        var newId = {\n          candidate: candidate\n        };\n        console.log(\"otherNodes_id\", _this.state.otherNodes_id);\n\n        _this.setState({\n          otherNodes_id: _objectSpread({}, nodes_id, {\n            newId: newId\n          }),\n          sent: true\n        });\n      } else {\n        _this.setState({\n          sent: true\n        });\n      }\n    };\n\n    _this.connect = function () {\n      var socket = _this.state.socket;\n      socket.emit('searchingPeer', {\n        'id': socket.id\n      });\n    };\n\n    _this.showUUID =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var node_uuid;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              node_uuid = _this.state.db.createUUID();\n              _context2.next = 3;\n              return _this.state.db.getUUID().then(function (r) {\n                if (r === 'not_found') {\n                  console.log('creando uuid...');\n\n                  var fcn_uuid =\n                  /*#__PURE__*/\n                  function () {\n                    var _ref2 = _asyncToGenerator(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee() {\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.next = 2;\n                              return _this.state.db.saveUUID(node_uuid);\n\n                            case 2:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee, this);\n                    }));\n\n                    return function fcn_uuid() {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }();\n\n                  fcn_uuid(node_uuid);\n                  console.log('uuid', node_uuid);\n                } else {\n                  node_uuid = r;\n                }\n\n                _this.setState({\n                  node_uuid: node_uuid\n                }, function () {\n                  return console.log('uuid created!... : ', node_uuid);\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var socket = this.state.socket;\n      socket.on('connect', function () {\n        console.log(\"triggered socket.id: \", socket.id);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var socket = this.state.socket;\n      socket.on('newCandidate', function (candidates) {\n        return socket.emit('receiveCandidate', candidates, _this2.receiveCandidateHandler);\n      });\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"blue\",\n        onClick: function onClick() {\n          return _this2.connect();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"connect\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.showUUID();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"showUUID\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.node_uuid));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/src/App.js"],"names":["React","Component","io","DB","endpoint","App","state","db","sent","socket","otherNodes_id","receiveCandidateHandler","data","console","log","candidate","nodes_id","newId","setState","connect","emit","id","showUUID","node_uuid","createUUID","getUUID","then","r","fcn_uuid","saveUUID","on","candidates","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport io from 'socket.io-client'\nimport DB from './DB'\nconst endpoint = \"http://localhost:4001\" // this is where we are connecting to with sockets\nclass App extends Component {\n    state = {\n      db:new DB('blockchain1'),\n      sent: false,\n      socket:io(endpoint),\n      otherNodes_id:{}\n    }\n\n  componentWillMount() {\n    const {socket} =this.state\n    socket.on('connect', ()=>{\n      console.log(\"triggered socket.id: \",socket.id)\n    })\n  }\n\n  receiveCandidateHandler = (data) => {\n    console.log(\"candidate received\",data)\n    const candidate = data\n    if(!this.state.otherNodes_id.candidate) {\n      const nodes_id = {...this.state.otherNodes_id}\n      const newId = {candidate:candidate}\n      console.log(\"otherNodes_id\", this.state.otherNodes_id)\n      this.setState({otherNodes_id:{...nodes_id,newId},sent:true})\n    }else{\n      this.setState({sent:true})\n    }\n  }\n  connect = () => {\n    const {socket} = this.state\n    socket.emit('searchingPeer',{'id':socket.id})\n  }\n\n  showUUID = async () => {\n    let node_uuid = this.state.db.createUUID()\n    await this.state.db.getUUID().then(r=>{\n      if(r==='not_found'){\n        console.log('creando uuid...')        \n        const fcn_uuid = async()=>{await this.state.db.saveUUID(node_uuid)}\n        fcn_uuid(node_uuid)     \n        console.log('uuid',node_uuid)\n      }else{\n        node_uuid = r\n      }\n      this.setState({node_uuid},()=>console.log('uuid created!... : ' , node_uuid))\n    })\n    //console.log(\"my_id saved: \", my_id)\n    //return null//<div>My id saved: {my_id}</div>\n  }\n\n  render() {\n    const {socket} = this.state\n\n    socket.on('newCandidate',(candidates) => socket.emit('receiveCandidate',\n    candidates,this.receiveCandidateHandler))\n    \n\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <button id=\"blue\" onClick={() => this.connect()}>connect</button>\n        <button onClick={() => this.showUUID()}>showUUID</button>\n        <h2>{this.state.node_uuid}</h2>      \n      </div>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}
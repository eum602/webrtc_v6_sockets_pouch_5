{"ast":null,"code":"import _regeneratorRuntime from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/src/App.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport DB from './DB';\nimport { v1 } from 'uuid';\nvar endpoint = \"http://localhost:4001\"; // this is where we are connecting to with sockets\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      db: new DB('blockchain1'),\n      node_uuid: v1(),\n      sent: false,\n      socket: io(endpoint),\n      otherNodes_id: {}\n    };\n\n    _this.receiveCandidateHandler = function (data) {\n      console.log(\"candidate received\", data);\n      var candidate = data;\n\n      if (!_this.state.otherNodes_id.candidate) {\n        var nodes_id = _objectSpread({}, _this.state.otherNodes_id);\n\n        var newId = {\n          candidate: candidate\n        };\n        console.log(\"otherNodes_id\", _this.state.otherNodes_id);\n\n        _this.setState({\n          otherNodes_id: _objectSpread({}, nodes_id, {\n            newId: newId\n          }),\n          sent: true\n        });\n      } else {\n        _this.setState({\n          sent: true\n        });\n      }\n    };\n\n    _this.connect = function () {\n      var socket = _this.state.socket;\n      socket.emit('searchingPeer', {\n        'id': socket.id\n      });\n    };\n\n    _this.showUUID =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var my_id;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.state.db.getUUID();\n\n            case 2:\n              my_id = _context.sent;\n              console.log(\"my_id saved: \", my_id); //return null//<div>My id saved: {my_id}</div>\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var socket = this.state.socket;\n      socket.on('connect', function () {\n        console.log(\"triggered socket.id: \", socket.id);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var socket = this.state.socket;\n      socket.on('newCandidate', function (candidates) {\n        return socket.emit('receiveCandidate', candidates, _this2.receiveCandidateHandler);\n      });\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"blue\",\n        onClick: function onClick() {\n          return _this2.connect();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"connect\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.showUUID();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"showUUID\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.state.node_uuid));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/usuario1/Desktop/projects_P2P/webrtc_v6_sockets_pouch/webrtc/src/App.js"],"names":["React","Component","io","DB","v1","endpoint","App","state","db","node_uuid","sent","socket","otherNodes_id","receiveCandidateHandler","data","console","log","candidate","nodes_id","newId","setState","connect","emit","id","showUUID","getUUID","my_id","on","candidates","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport io from 'socket.io-client'\nimport DB from './DB'\nimport { v1 } from 'uuid';\nconst endpoint = \"http://localhost:4001\" // this is where we are connecting to with sockets\nclass App extends Component {\n    state = {\n      db:new DB('blockchain1'),\n      node_uuid:v1(),\n      sent: false,\n      socket:io(endpoint),\n      otherNodes_id:{}\n    }\n\n  componentWillMount() {\n    const {socket} =this.state\n    socket.on('connect', ()=>{\n      console.log(\"triggered socket.id: \",socket.id)\n    })\n  }\n\n  receiveCandidateHandler = (data) => {\n    console.log(\"candidate received\",data)\n    const candidate = data\n    if(!this.state.otherNodes_id.candidate) {\n      const nodes_id = {...this.state.otherNodes_id}\n      const newId = {candidate:candidate}\n      console.log(\"otherNodes_id\", this.state.otherNodes_id)\n      this.setState({otherNodes_id:{...nodes_id,newId},sent:true})\n    }else{\n      this.setState({sent:true})\n    }\n  }\n  connect = () => {\n    const {socket} = this.state\n    socket.emit('searchingPeer',{'id':socket.id})\n  }\n\n  showUUID = async () => {\n    const my_id = await this.state.db.getUUID()\n    console.log(\"my_id saved: \", my_id)\n    //return null//<div>My id saved: {my_id}</div>\n  }\n\n  render() {\n    const {socket} = this.state\n\n    socket.on('newCandidate',(candidates) => socket.emit('receiveCandidate',\n    candidates,this.receiveCandidateHandler))\n    \n\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <button id=\"blue\" onClick={() => this.connect()}>connect</button>\n        <button onClick={() => this.showUUID()}>showUUID</button>\n        <h2>{this.state.node_uuid}</h2>      \n      </div>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}